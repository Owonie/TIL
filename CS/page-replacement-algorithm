# 페이지 교체 알고리즘

페이징 기법을 사용함으로서 주기억장치를 동적 분할하여 메모리 관리 작업을 수행할 수 있다. 가상 메모리 페이징의 특징은 필요한 페이지가 있을 때 자동으로 불러지도록 만들었다는 것인데, 이러한 작업을 수행할 땐 페이지 교체 알고리즘이 필요하다.

필요한 내용만 주기억장치에 적재한다고 해도 메모리는 가득차게 될 수 있다. 그렇기에 어떤 페이지를 out할지 (victim page 선정)정해줘야 한다.

## Page Reference String

연속된 페이지는 생략하고 하나의 페이지 번호만 나타내는 방식을 page reference string이라 표현한다. CPU의 주소 요구에 따라 페이지 결함이 일어나지 않는 부분은 생략하여 표시하는 방법이다

### FIFO 알고리즘 (First In First Out)

가장 먼저 올라온 페이지를 victim page로 지정한다. 초기화 코드에서 적절한 방법이다. 여기서 초기화 코드란 처음 프로세스 실행 될 때 최초 초기화를 시키는 역할만 진행하고 다른 역할은 수행하지 않는 코드를 의미한다.

### OPT 알고리즘 (Optimal)

앞으로 가장 사용하지 않을 페이지를 예측하여 victim page로 지정한다. 예측해야되는 부분이 있어 수행하기 어려운 알고리즘이다. 실제로 사용하기보다는 연구 목적을 위해 사용된다고 한다.

### LUR 알고리즘 (Least Recently Used)

최근에 사용하지 않은 페이지를 가장 먼저 내려보내는 알고리즘이다. OPT는 미래 예측이라면 LRU는 누적된 데이터를 바탕으로 victim page를 정하기에 현실적으로 실현 가능하다.
실제로 사용할 수 있는 페이지 교체 알고리즘에서는 가장 좋은 방법 중 하나다. 많은 운영체제가 채택하는 알고리즘이라고 한다.

### LFU 알고리즘 (Least Frequently Used)

LFU 알고리즘은 참조횟수가 가장 적은 페이지를 교체하는 알고리즘이다. 페이지가 참조될 때 마다 카운트를 하여 참조 횟수가 가장 적은 페이지를 순서대로 교체한다. 단기적 집중적으로 사용된 페이지가 추후에 교체되지 않는 단점이 존재할 수 있다.

### 클럭 알고리즘 (Not Used Recently or Not Recently Used)

LRU처럼 가장 최근에 참조되지 않은 페이지를 대상으로 선정한다는 점에서 LRU와 흡하다. 하지만 교체되는 페이지의 참조 시점이 가장 오래되었다는 것을 보장하지는 않는다. 프레임 내의 페이지가 참조될 때 하드웨어에 의해 자동으로 1로 세팅한다. 참조 되지 않는 페이지를 0으로 변경한다. 원형 리스트와 같은 구조처럼 매번 순회하며 한 바퀴 도는 동안 걸리는 시간만큼 페이지를 메모리에 유지시켜 페이지 부재율을 줄이도록 설계되었다. 다른 이름으로 2차 기회 알고리즘이라 불린다.
